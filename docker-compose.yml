services:
  petric:
    build: {context: ., target: sirf}
    image: synerbi/sirf:ci
    command: "exit 0"
  leaderboard:
    build: {context: ., target: leaderboard}
    restart: always
    expose: [6006]
    command: "tensorboard --logdir=/logs --bind_all --window_title='PETRIC Leaderboard' --path_prefix /leaderboard"
    volumes: [/opt/runner/logs:/logs]
    healthcheck: {test: "wget --spider localhost:6006/leaderboard"}
    depends_on: [caddy]
    labels:
      virtual.host: petric.tomography.stfc.ac.uk
      virtual.tls-email: casper.da-costa-luis@stfc.ac.uk
      # /leaderboard -> leaderboard:6006
      virtual.port: 6006
      virtual.proxy.matcher: /leaderboard*
      # /data -> caddy:/share/petric
      # /data-wip -> caddy:/share-rw/petric-wip
      # / -> wiki
      virtual.host.directives: |
        @notget not method GET
        handle_path /data* {
          root * /share/petric
          route @notget {
            # import ext_auth # no need as docker mounted as read-only
            webdav
          }
          import filesrv "" # read-only so fine to map md to html
        }
        handle_path /data-wip* {
          root * /share-rw/petric-wip
          import ext_auth
          route @notget {
            webdav
          }
          import filesrv html # writable so must request *.mdhtml extension explicitly
        }
        redir / https://github.com/SyneRBI/PETRIC/wiki
  caddy:
    image: casperdcl/caddy-gen:latest
    build: {context: ., target: caddy-gen}
    restart: always
    cap_add: [NET_ADMIN]
    volumes:
    - ./caddy:/data/caddy
    - /mnt/share:/share-rw
    - /mnt/share:/share:ro
    - /mnt/share-private:/share-private:ro
    - ./global.caddy:/global.caddy
    - /var/run/docker.sock:/tmp/docker.sock:ro
    environment: {CADDY_SNIPPET: /global.caddy}
    ports: ["80:80", "443:443", "443:443/udp"]
    healthcheck: {test: "wget --spider localhost/data --header Host:petric.tomography.stfc.ac.uk"}
